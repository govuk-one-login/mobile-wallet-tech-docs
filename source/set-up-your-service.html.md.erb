---
title: Setting up your service
weight: 45
last_reviewed_on: 2025-02-14
review_in: 2 month
---

# Setting up your service

## Step 1: Migrate your service to One Login


## Step 2: Generate a signing key pair

Verifiable credentials stored in the GOV.UK Wallet need to be cryptographically signed by the credential issuer.

GOV.UK Wallet follows the [OpenID Connect for Verifiable Credential Issuance](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html) standard and require the credential issuer - your service - to create a pre-authorised code (JWT) to secure the credential exchange.

We recommend to use the same key pair to sign and verify credentials and pre-authorised code.

Signing keys should use the Elliptic Curve Digital Signature Algorithm (ECDSA) with curve P-256. If you are using AWS, you should use an Asymmetric `ECC_NIST_P256` key.

[Step 3](set-up-your-service.html#step-3-publish-your-pre-authorised-code-public-signing-key-as-a-jwks) and [Step 4](set-up-your-service.html#step-4-publish-your-credential-public-signing-key-in-a-did-document) respectively cover how your public key must be published as a JWKS and in a DID document at `well-known` URLs.



## Step 3: Publish your pre-authorised code public signing key as a JWKS


## Step 4. Publish your credential public signing key in a DID document



#### Key management

The GOV.UK Wallet, as well as any consumer of verifiable credentials, needs to verify the validity of the credentials your service issues. Credentials issued by your service signed with your private key,  or keys, need to be verified by the public key, or keys, you made available in the `did:web` document.

Your public keys need to stay available throughout the lifecycle of your credentials. A public key used to sign a group of VCs can not be made inactive until after the VCs have expired. Public keys should be kept in an inactive state, available to be verified.

For their credential issuer service, credential issuers should include specific key management features.

The service needs a key refresh process that creates a new asymmetric public or private key pair for signing new VCs, but that retains trust in the previous versions of the public key for verifying.

This is done by making sure the public part of the historical key is retained, while the private key is destroyed. For example, a VC issued by an internal and external issuer.

The service also needs key revocation. This needs to include a notice made from the credential issuer explaining that a specific key should be removed from operational use before the key expires. This will generally happen when the key is lost or compromised. If a key is compromised, it can be used by an attacker to decrypt or forge messages, impersonate an identity, or access sensitive information.

The table below describes the possible states of a key pair used for signing credentials:

| Key State | Description |
|-----------|-------------|
| Created   | A key pair is generated with an activation date in the future. It is not yet used for signing.|
| Active    | A key becomes active on the activation date, and enabled for signing and verifying the VC. There must not be multiple keys active at the same time.|
| Inactive  | A key becomes inactive past its expiration date or time. The public key will still be valid for verifying the VC.|
| Revoked   | A key is destroyed and removed from the issuerâ€™s server, and is not valid for signing or verifying the signatures.|

## Step 5: Publish the metadata of your credentials



## Step 6: Define the content of your credential



## Step 7: Build your Wallet Credential Issuer

Your service needs to implement the **[Wallet Credential Issuer APIs](/API-reference.html)**.

Please refer to the **[sample reference material](/API-reference.html)** to see an example of a credential issuer service integrated with the GOV.UK Wallet.
