openapi: "3.0.0"
info:
  version: 1.0.0
  title: Wallet Credential Issuer API
  description: |-
    This document describes the five endpoints of your credential issuer that are required to issue a credential to GOV.UK Wallet.
    
    Implementing this API and following the rest of the technical documentation will ensure that only a user logged in the mobile app and your service using the same GOV.UK One Login account is allowed to obtain the credential you are offering. It will also ensure that the credential is cryptographically bound to a particular wallet so that it cannot be passed on to another wallet.

    For a technical overview of the end-to-end issuance flow please refer to <b>[Understanding GOV.UK digital walletâ€™s credential exchange flow](https://upgraded-barnacle-gqknpev.pages.github.io/issuance-flow.html)</b>. The flow is based on OpenID Connect for Verifiable Credential Issuance ([OpenID4VCI](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html)).<br><br>Please refer to the <b>[Use sample reference material](https://upgraded-barnacle-gqknpev.pages.github.io/use-sample-reference-material.html)</b> for a reference implementation of this API.
  license:
    name: MIT License
externalDocs:
  description: Find out more about the GOV.UK Wallet
  url: https://upgraded-barnacle-gqknpev.pages.github.io/
tags:
  - name: credential_offer
    description: Used to initiate the transaction
  - name: credential
    description: Used to request the wallet credential
  - name: metadata
    description: Used to share your metadata (e.g. supported credentials, display information )
  - name: did
    description: Used to share your public keys as a DID
  - name: jwks
    description: Used to share your public keys as a JWKS
paths:
  /credential_offer:
    get:
      tags:
        - credential_offer
      summary: Request a credential offer
      description: <b>What is it?</b> A private endpoint to generate and return a credential offer.<br><b>When do you need it?</b> The website of your service must display a credential offer to your user as a QR code or a link after they have logged in with One Login and proven - after successfully interacting with your service - that they are eligible to receive the credential. This endpoint produces the URL that your website will render as a QR code or a deep link so the wallet can consume it. The `credentialType` parameter is used to distinguish between multiple credentials your CRI may offer.
      parameters:
        - name: documentId
          in: path
          description: ID of the document for which the offer must be issued
          required: true
          schema:
            type: string
        - name: walletSubjectId
          in: path
          description: Pairwise identifier generated from the `CommonSubjectId` and `rpSectorId`
          required: true
          schema:
            type: string
        - name: credentialType
          in: path
          description: Type of credential to issue, e.g. `FishingLicence`
          required: true
          schema:
            type: string
      responses:
        '200':
          description: URI encoded credential offer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialOfferResponse"
              example:
                credential_offer_uri: https://mobile.build.account.gov.uk/wallet/add?credential_offer=%7B%22credentials%22%3A%5B%22FishingLicence%22%5D%2C%22grants%22%3A%7B%22urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Apre-authorized_code%22%3A%7B%22pre-authorized_code%22%3A%22eyJraWQiOiI1ZGNiZWU4NjNiNWQ3Y2MzMGM5YmExZjczOTNkYWNjNmMxNjYxMDc4MmU0YjZhMTkxZjk0YTdlOGIxZTE1MTBmIiwidHlwIjoiSldUIiwiYWxnIjoiRVMyNTYifQ.eyJhdWQiOiJodHRwczovL3Rva2VuLmJ1aWxkLmFjY291bnQuZ292LnVrIiwiY2xpZW50SWQiOiI8WU9VUiBPTkUgTE9HSU4gQ0xJRU5UIElEPiIsImlzcyI6Imh0dHBzOi8vZXhhbXBsZS1jcmVkZW50aWFsLWlzc3Vlci5tb2JpbGUuYnVpbGQuYWNjb3VudC5nb3YudWsiLCJjcmVkZW50aWFsX2lkZW50aWZpZXJzIjpbIjE2NTAwNWYwLTI4YjktNGFhMS05NTM4LTNmZThlZTc0N2Q0YiJdLCJleHAiOjE3Mzk0NTc3ODAsImlhdCI6MTczOTQ1NzQ4MH0.aZRv9KBCWRGLsi1Rd96jrzPxpQUkW68up0BYvUiF4RHjbLf6IxWn2PyU_ExOBAtEoj0lGAOOX7efOLMEc-lcIg%22%7D%7D%2C%22credential_issuer%22%3A%22https%3A%2F%2Fexample-credential-issuer.mobile.build.account.gov.uk%22%7D
  /credential:
    post:
      tags:
          - credential
      summary: Request a credential
      description: <b>What is it?</b> A public endpoint for the wallet to request the credential.<br><b>When do you need it?</b> This endpoint is used to send the credential to the GOV.UK Wallet. You must first establish that the wallet that requested it and the user logged in your service with One Login are allowed to receive the credential. For this, the app needs to share with you a credential issuer access token (as bearer token) and a proof that the user is in possession of the wallet.
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequestBody'
            example:
              proof:
                proof_type: jwt
                jwt: eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRpZDprZXk6ekRuYWVTR2ZTUU1Zdm5MYkxXRXViaGhHRFBvcTdwQTlNTU52dW12YnNtTUNab3ZVUiJ9.eyJpc3MiOiJ1cm46ZmRjOmdvdjp1azp3YWxsZXQiLCJhdWQiOiJodHRwczovL2V4YW1wbGUtY3JlZGVudGlhbC1pc3N1ZXIubW9iaWxlLmJ1aWxkLmFjY291bnQuZ292LnVrIiwiaWF0IjoxNzM5NDU3NTE3MzU1LCJub25jZSI6ImRiMmRiMzEzLTVjYjktNGJiNC1hYTRkLTlmZTRkYWM0MGJlMSJ9.7Ni5vVvTIf8jWGRsaxpjg7_o5rSGG_sttYKrC4184IUgtdjfsfqptClmO9_x62dyAgcbjeLqb1Q4YIIG8ZKNzA
      responses:
        '200':
          description: Fishing Licence verifiable credential
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialResponse"
              example:
                credential: eyJraWQiOiI1ZGNiZWU4NjNiNWQ3Y2MzMGM5YmExZjczOTNkYWNjNmMxNjYxMDc4MmU0YjZhMTkxZjk0YTdlOGIxZTE1MTBmIiwiY3R5IjogInZjIiwidHlwIjogInZjK2p3dCIsImFsZyI6IkVTMjU2In0.eyJpc3MiOiJodHRwczovL2V4YW1wbGUtY3JlZGVudGlhbC1pc3N1ZXIubW9iaWxlLmJ1aWxkLmFjY291bnQuZ292LnVrIiwic3ViIjoiZGlkOmtleTplYmZhZWIxZmQ3MTJlYmYxYzI3NmUxMmVjMjEiLCJpYXQiOiIxNzEyNjY0NzMxIiwibmJmIjoiMTcxMjY2NDczMSIsImV4cCI6IjE3NDQyMjE2NTciLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvbnMvY3JlZGVudGlhbHMvdjIiLCI8SlNPTi1MRCBDT05URVhUIFVSSSBGT1IgSVNTVUVSPiJdLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRmlzaGluZ0xpY2VuY2UiXSwiaXNzdWVyIjoiaHR0cHM6Ly9leGFtcGxlLWNyZWRlbnRpYWwtaXNzdWVyLm1vYmlsZS5idWlsZC5hY2NvdW50Lmdvdi51ayIsIm5hbWUiOiJGaXNoaW5nIGxpY2VuY2UiLCJkZXNjcmlwdGlvbiI6IjxPUFRJT05BTCBDUkVERU5USUFMIERFU0NSSVBUSU9OPiIsInZhbGlkRnJvbSI6IjIwMjQtMDQtMDlUMTI6MTI6MTFaIiwidmFsaWRVbnRpbCI6IjIwMjgtMTItMTBUMjI6NTk6NTlaIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6a2V5OmViZmFlYjFmZDcxMmViZjFjMjc2ZTEyZWMyMSIsIm5hbWUiOlt7Im5hbWVQYXJ0cyI6W3sidmFsdWUiOiJTYXJhaCIsInR5cGUiOiJHaXZlbk5hbWUifSx7InZhbHVlIjoiRWR3YXJkcyIsInR5cGUiOiJGYW1pbHlOYW1lIn1dfV0sImZpc2hpbmdMaWNlbmNlIjpbeyJsaWNlbmNlTnVtYmVyIjoiMDA5ODc4ODYzIiwiaXNzdWFuY2VEYXRlIjogIjIwMjMtMTItMTAiLCJleHBpcmF0aW9uRGF0ZSI6ICIyMDI4LTEyLTEwIn1dfX0.FhJZpl4g6Vhi5G4hgLV_2ku_XlR9Eo8zX1Yj5hMOfLepwfI3YkD9xdNRUoMfKFwtB56bPQ6Fk6Q_2ePi5_N0aw
  /.well-known/openid-credential-issuer:
    get:
      tags:
          - metadata
      summary: Retrieve the metadata
      description: <b>What is it?</b> A public endpoint for the wallet to retrieve metadata about the credential(s) issued by your credential issuer.<br><b>When do you need it?</b> You must publish this metadata file once when setting up of your credential issuer service. After that, GOV.UK Wallet will retrieve your metadata at the well-known endpoint each time a user requests a new credential, in case your metadata has changed.
      responses:
        '200':
          description: Credential Issuer metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataResponse"
              example:
                credential_issuer: https://example-credential-issuer.mobile.build.account.gov.uk
                authorization_servers:
                    - https://token.build.account.gov.uk
                credential_endpoint: https://example-credential-issuer.mobile.build.account.gov.uk/credential
                notification_endpoint: https://example-credential-issuer.mobile.build.account.gov.uk/notification
                credential_configurations_supported:
                  fishingLicence:
                    format: jwt_vc_json
                    credential_definition:
                      types:
                        - VerifiableCredential
                        - FishingLicence
                    cryptographic_binding_methods_supported:
                      - did
                    cryptographic_suites_supported:
                      - ES256K
                    proof_types_supported:
                      jwt:
                        proof_signing_alg_values_supported:
                          - ES256
                        key_attestations_required:
                    display:
                      - name: Fishing Licence number
                        locale: en-GB
                        background_color: '#12107c'
                        text_color: '#FFFFFF'
                      - name: Rhif Trwydded Pysgota
                        locale: en-CY
                        background_color: '#12107c'
                        text_color: '#FFFFFF'
                    credentialSubject:
                      name:
                        - nameParts:
                            - display:
                                - name: Name
                                  locale: en-GB
                                - name: Enw
                                  locale: cy-GB
                      fishingLicenceRecord:
                        licenceNumber:
                          display:
                            - name: Fishing Licence number
                              locale: en-GB
                            - name: Rhif Trwydded Pysgota
                              locale: cy-GB
                        expirationDate:
                          display:
                            - name: Dyddiad dod i ben
                              locale: en-GB
                            - name: Rhif Trwydded Pysgota
                              locale: cy-GB
  /.well-known/did.json:
    get:
      tags:
          - did
      summary: Retrieve the DID document
      description: <b>What is it?</b> A public endpoint for GOV.UK One Login and Wallet to retrieve your public keys as a DID document.<br><b>When do you need it?</b> The did:web document contains essential information such as the public signing key to verify the validity of the credential issued by your credential issuer. You must publish this did:web file when setting up your credential issuer service. After that, GOV.UK One Login and Wallet will use this endpoint to retrieve your did:web document and validate the signature of your credentials.
      responses:
        '200':
          description: Credential Issuer DID document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DidResponse"
              example:
                "@context":
                  - https://www.w3.org/ns/did/v1
                  - https://w3id.org/security/suites/jws-2020/v1
                id: did:web:example-credential-issuer.mobile.build.account.gov.uk
                verificationMethod:
                  - id: did:web:example-credential-issuer.mobile.build.account.gov.uk#5dcbee863b5d7cc30c9ba1f7393dacc6c16610782e4b6a191f94a7e8b1e1510f
                    type: JsonWebKey2020
                    controller: ddid:web:example-credential-issuer.mobile.build.account.gov.uk
                    publicKeyJwk:
                      kty: EC
                      kid: 5dcbee863b5d7cc30c9ba1f7393dacc6c16610782e4b6a191f94a7e8b1e1510f
                      crv: P-256
                      x: 6jCKX_QRrmTeEJi-uiwcYqu8BgMgl70g2pdAst24MPE
                      y: icPzjbSk6apD_SNvQt8NWOPlPeGG4KYU55GfnARryoY
                      alg: ES256
                assertionMethod:
                  - did:web:example-credential-issuer.mobile.build.account.gov.uk#5dcbee863b5d7cc30c9ba1f7393dacc6c16610782e4b6a191f94a7e8b1e1510f
  /.well-known/jwks.json:
    get:
      tags:
          - JWKS
      summary: Retrieve the JWKS
      description: <b>What is it?</b> A public endpoint for GOV.UK One Login to retrieve your public key as a JWKS.<br><b>When do you need it?</b> The key pair associated with the JWKS is used to sign the pre-authorisation code generated by your credential issuer and used by One Login to secure the credential issuance according to OIDC4VCI. You must publish this jwks.json file when setting up your credential issuer service.
      responses:
        '200':
          description: Credential Issuer JWKS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicKeyJwk"
              example:
                keys:
                  - kty: EC
                    use: sig
                    crv: P-256
                    kid: 5dcbee863b5d7cc30c9ba1f7393dacc6c16610782e4b6a191f94a7e8b1e1510f
                    x: 6jCKX_QRrmTeEJi-uiwcYqu8BgMgl70g2pdAst24MPE=
                    y: icPzjbSk6apD_SNvQt8NWOPlPeGG4KYU55GfnARryoY=
                    alg: ES256
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CredentialOfferResponse:
      type: object
      required:
        - credential_offer_uri
      properties:
        credential_offer_uri:
          type: string
          format: uri
    CredentialRequestBody:
      type: object
      properties:
        proof:
          $ref: "#/components/schemas/Proof"
      required:
        - proof
    Proof:
      type: object
      additionalProperties: false
      properties:
        proof_type:
          type: string
          enum: [ jwt ]
        jwt:
          type: string
          format: jwt
      required:
        - jwt
        - proof_type
    CredentialResponse:
      type: object
      properties:
        credential:
          type: string
          format: jwt
      required:
        - credential
    MetadataResponse:
      type: object
      properties:
        credential_issuer:
          type: string
          format: uri
        credentials_endpoint:
          type: string
          format: uri
        credential_endpoint:
          type: string
          format: uri
        authorization_servers:
          type: array
          items:
            type: string
            format: uri
        credential_configurations_supported:
          $ref: '#/components/schemas/CredentialConfigurationsSupported'
      required:
        - authorization_servers
        - credential_configurations_supported
        - credential_endpoint
        - credential_issuer
        - credentials_endpoint
    CredentialConfigurationsSupported:
      type: object
      properties:
        fishingLicence:
          $ref: '#/components/schemas/FishingLicence'
      required:
        - fishingLicence
    FishingLicence:
      type: object
      properties:
        format:
          type: string
        credential_definition:
          $ref: '#/components/schemas/CredentialDefinition'
        cryptographic_binding_methods_supported:
          type: array
          items:
            type: string
        credential_signing_alg_values_supported:
          type: array
          items:
            type: string
        proof_types_supported:
          $ref: '#/components/schemas/ProofTypesSupported'
        display:
          type: array
          items:
            $ref: '#/components/schemas/FishingLicenceDisplay'
        credentialSubject:
          $ref: '#/components/schemas/CredentialSubject'
      required:
        - credentialSubject
        - credential_definition
        - credential_signing_alg_values_supported
        - cryptographic_binding_methods_supported
        - display
        - format
        - proof_types_supported
    CredentialDefinition:
      type: object
      properties:
        types:
          type: array
          items:
            type: string
      required:
        - types
    ProofTypesSupported:
      type: object
      properties:
        jwt:
          $ref: '#/components/schemas/Jwt'
      required:
        - jwt
    Jwt:
      type: object
      properties:
        proof_signing_alg_values_supported:
          type: array
          items:
            type: string
        key_attestations_required:
          type: object
      required:
        - key_attestations_required
        - proof_signing_alg_values_supported
    KeyAttestationsRequired:
      type: object
    FishingLicenceDisplay:
      type: object
      properties:
        name:
          type: string
        locale:
          type: string
        background_color:
          type: string
        text_color:
          type: string
      required:
        - background_color
        - locale
        - name
        - text_color
    CredentialSubject:
      type: object
      properties:
        name:
          type: array
          items:
            $ref: '#/components/schemas/Name'
        fishingLicenceRecord:
          $ref: '#/components/schemas/FishingLicenceRecord'
      required:
        - fishingLicenceRecord
        - name
    Name:
      type: object
      properties:
        nameParts:
          type: array
          items:
            $ref: '#/components/schemas/NameParts'
      required:
        - nameParts
    NameParts:
      type: object
      properties:
        display:
          type: array
          items:
            $ref: '#/components/schemas/Display'
      required:
        - display
    Display:
      type: object
      properties:
        name:
          type: string
        locale:
          type: string
      required:
        - locale
        - name
    FishingLicenceRecord:
      type: object
      properties:
        licenceNumber:
          $ref: '#/components/schemas/LicenceNumber'
        expirationDate:
          $ref: '#/components/schemas/ExpirationDate'
      required:
        - licenceNumber
        - expirationDate
    LicenceNumber:
      type: object
      properties:
        display:
          type: array
          items:
            $ref: '#/components/schemas/Display'
      required:
        - display
    ExpirationDate:
      type: object
      properties:
        display:
          type: array
          items:
            $ref: '#/components/schemas/Display'
      required:
        - display
    DidResponse:
      type: object
      properties:
        '@context':
          type: array
          minItems: 1
          items:
            type: string
            format: uri
        id:
          type: string
        verificationMethod:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/VerificationMethod"
        assertionMethod:
          type: array
          minItems: 1
          items:
            type: string
      required:
        - '@context'
        - assertionMethod
        - id
        - verificationMethod
    VerificationMethod:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        controller:
          type: string
        publicKeyJwk:
          $ref: "#/components/schemas/PublicKeyJwk"
      required:
        - id
        - type
        - controller
        - publicKeyJwk
    PublicKeyJwk:
      type: object
      properties:
        kid:
          type: string
        kty:
          type: string
        crv:
          type: string
        x:
          type: string
        y:
          type: string
      required:
        - crv
        - kid
        - kty
        - x
        - y
    JwksResponse:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/Key'
      required:
        - keys
    Key:
      type: object
      properties:
        kty:
          type: string
        use:
          type: string
        crv:
          type: string
        kid:
          type: string
        x:
          type: string
        y:
          type: string
        alg:
          type: string
      required:
        - alg
        - crv
        - kid
        - kty
        - use
        - x
        - y